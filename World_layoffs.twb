<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='layoffs_cleaned' inline='true' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='layoffs_cleaned' name='textscan.11w2ba013d1lpj191fodd17iumfn'>
            <connection class='textscan' directory='C:/Users/snkty/OneDrive/Desktop/SQL_Project/World_Layoffs' filename='layoffs_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_laid_off</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>total_laid_off</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_laid_off</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>percentage_laid_off</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stage]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>stage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funds_raised_millions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[funds_raised_millions]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>funds_raised_millions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='layoffs_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]' role='measure' type='quantitative' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Funds Raised Millions' datatype='real' name='[funds_raised_millions]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentage Laid Off' datatype='real' name='[percentage_laid_off]' role='measure' type='quantitative' />
      <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal' />
      <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/snkty/AppData/Local/Temp/TableauTemp/#TableauTemp_0aa06rs1qdr8cm1ae16iu1gghnxf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 09:16:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company</remote-alias>
              <ordinal>0</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>industry</remote-alias>
              <ordinal>2</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_laid_off</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_laid_off</remote-alias>
              <ordinal>3</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage_laid_off</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage_laid_off</remote-alias>
              <ordinal>4</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>5</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stage</remote-alias>
              <ordinal>6</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>7</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>funds_raised_millions</remote-name>
              <remote-type>5</remote-type>
              <local-name>[funds_raised_millions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>funds_raised_millions</remote-alias>
              <ordinal>8</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>549</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='layoffs_cleaned.csv' id='layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA'>
            <properties context=''>
              <relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='company' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='string' name='industry' ordinal='2' />
                  <column datatype='integer' name='total_laid_off' ordinal='3' />
                  <column datatype='real' name='percentage_laid_off' ordinal='4' />
                  <column datatype='date' name='date' ordinal='5' />
                  <column datatype='string' name='stage' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='real' name='funds_raised_millions' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Layoffs by Comany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Company from 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</cols>
      </table>
      <simple-id uuid='{7C306AD6-270B-4BA3-86F9-D46DA023A010}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Country from 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' value='93' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DB76FBB1-E93B-4336-8D50-00A7299F81B5}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Top Country from 2020 -2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]' field-type='quantitative' max='24022051.618402451' min='-21150066.222939476' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]' field-type='quantitative' max='13744872.171771128' min='-7925182.1977989376' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <geometry column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5942ADC3-89E9-4D89-B35C-079C5610BA0B}' />
    </worksheet>
    <worksheet name='Total Laid Off by Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Industry from 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' value='101' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</cols>
      </table>
      <simple-id uuid='{BA39FE86-57AA-4AA1-A2D1-13823F46B7DF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Visuals Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
      </datasources>
      <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='5' param='horz' type-v2='layout-flow' w='89028' x='10473' y='1072'>
            <zone h='97856' id='3' type-v2='layout-basic' w='79053' x='10473' y='1072'>
              <zone h='48910' id='1' name='Total Laid Off by Country Map' w='39537' x='49989' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48946' id='8' name='Total Laid Off by Country' w='39516' x='10473' y='49982'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48910' id='10' name='Total Laid Off by Industry' w='39516' x='10473' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48946' id='14' name='Layoffs by Comany' w='39537' x='49989' y='49982'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97856' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='1072'>
              <zone fixed-size='214' h='29758' id='6' is-fixed='true' name='Total Laid Off by Country Map' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='295' h='34049' id='13' is-fixed='true' name='Total Laid Off by Industry' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9975' x='89526' y='30830'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='266' h='34049' id='15' is-fixed='true' name='Layoffs by Comany' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='64879'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='41823' id='7' name='Total Laid Off by Country Map' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9974' x='499' y='33242'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='23863' id='9' name='Total Laid Off by Country' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9974' x='499' y='75065'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32170' id='12' name='Total Laid Off by Industry' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9974' x='499' y='1072'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{304E7520-F7CE-408F-B1E7-F0E2D9718135}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Visuals Dashboard'>
      <viewpoints>
        <viewpoint name='Layoffs by Comany'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Laid Off by Country' />
        <viewpoint name='Total Laid Off by Country Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Laid Off by Industry'>
          <zoom type='entire-view' />
          <highlight field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D5ECE1D7-EFA0-4178-B631-87AA03639601}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CEAD7C6-5D47-4E5E-B198-6E1A26E9D1A4}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='72'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:location:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA226F26-38AA-4BD8-A531-CCCECAAB8169}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AA214B07-8281-4C3E-89FD-9D196EB399D3}' />
    </window>
    <window class='worksheet' name='Layoffs by Comany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69D81691-3B38-4735-9721-E583D2AA3430}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Layoffs by Comany' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country' width='192'>
      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
      +8lOGN/h2f8BEm/+lD4v5rYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country Map' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Industry' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Visuals Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOydd3hb1fnHP/dqS7Zsy3vGK17Ze0ICBBIIo6Uts9D2RymrAwotlDLbUtpS
      9i5QZssoq+wAAZKQ5QzHmXbivbe1patxz+8PJ07cJJAQZ4jo8zx5It9xhnS+Z77nPZIQQhAl
      ynGKfLQTECXK0SQqgCjHNVEBRDmuGRYBBBUfDpdnOIKKEuWIMkQA77/9Ok6Ph7ff/ZBQMIDL
      7UUIgcvpQAkEURQFn8+HKgSqGsbhdKKGw7z4zOOs27wdAn3cfssdPPDAQzR2OlB8XlxuL+7+
      Jt54azGBYAiP20kwFD5a+Y0SZQjaPf+YPrGMxx58iNPP/zGvvvAMfU4vC79/AUs++QhnSEe2
      xU8/iVx83nf54r1XaO31kJSVR1VNM8XTdCBC5I+ZzgXzR/Pa4lVkW7ysWLuVOSdPY/XqleSm
      a1m6tgprfBL/98PvIR2tXEeJspMhLUBiTimJyUmMzUuks9fJqLIS2nZsxZyYRdDrQWOK44If
      nItRJ9Pt8HHOWadjd3gZPWE8syaNBkANh2lrasASY6K1y01KvImEtBGMHTsJfdBBbHIWqYlx
      fNO5VzXsZ+u2mkPLtRBsWfcljz3+BE5FULVhJY888gT9vtA+H1+++H263fu+NzTYIFs2V39t
      3lZ98SEdjsABJbW6aivqQXxZQg3x6Xtv8Pxr7x74S/sLSwjsPR2sXrWa9u5+xM5rDTu2smnb
      DlRVAALF62L92nK21zUzMKsu6O1ooXzdBvzBr27tA34P69eWU1XbOPCuEPR1tVK+dj3+wMB3
      roZDVG2uZH3lFoJhFSFU2pvrWbVqFW1dfd+4LMFeYwCJqdOmIsl6zjr9ZBo77BSOGk3I3cuU
      qZMpKRuNXjNQb58x/xQ++HgpZyw4lXHjxg+8rrGg9XewvtHLmafMIjPZSkpuKanJWSSaXJhH
      TMYm+jHExH/j2j/o7+WxR1/65jkG1ICLh558gSnTpqOXVR56+DGmTJ+OSbvvIdH6lV/Q5/l6
      ASBcPPzAP7/2B6lcveSABAXw9D8eI3AQPcau2greWrKZyePKDvyl/dC0eTk33fFX1m9Yz43X
      /pwdbQ6WvfsCf3vsJd584TEefvEdAq5efnP9r/ly9Toev+d23vq8go6aDVx70x2sWvIh19/8
      Z4Lh/XwjQTvX/fxavly9lqfu+xOvfbyazvpNXPfb21m97FN+8Zs7CQl4+M8388YHn/HJf//F
      7fc+TX/TVh78x4tUVm7g97++hoqajm+cRynSFsIUTyvX3/gUjzxyBwAdtRu4/S+P4vP7mDLv
      +5w9MZF/fLCVu268gtef+hu2yecRqvucl/77BRqdkWt/dxvr33+GF95ZSkHhSMaU5PP2Ox+Q
      l1fC1df8iMcfeRwha1l4/mV877SZADz0x19T79TT0VTHgguupNTSzaoOM7+89EwevfsW5v7w
      BkZlJyDUPq762V957Om/8pff/gKXLobm2lpOOf9KLjljKnfdehN1PX68fe3c9uh/KH/5Lkad
      /SsmpQtu+utT3H3Tlfzuxpvp94UYOekkRtu83P/Uy+SMyOen193GF689TH5RGWvr+klVmjjj
      6jsZlSpz3U1/5d6/34VW9XD91VexqdXBuOknMyU5gDcmm6WfruSeR+7gvttvo7XXRWbRJG77
      7c/5600/wyUnUV+znVHjJ9LZuJ24ghncffNVyEDA70ejNyCj8uAffsvMC2/g5ftv4Zb7/4FN
      6+Pqn/+Wex56EL0Mep2WJW8/yzYlG0vHctJn/4h5E3P5682/5Kyf/4myzLi9f0w1iC8oYTJo
      WfH+S6ztTyDFVUnchHNZMK2Y+2//FSdf9keKU/QYjUZ6Gzdzx5Pv8vCffweA12XnsXv/zJyL
      rmNqccY3Kk9DqrwvvviCNWvW7PVvxYoV3yjwI0Fi5kjO/8F3OXXeHFYtW0pm2VSUlo30ePys
      re5m1mgbb35SyT+e+Sd/vvFyXnn1TS65/BeMnzKdp598nF/+6jrGjRvL0888jt7Tic6aztnf
      /QEnzxg/GIckabj817fx4gtPs+rjtxgz81S2r/kCt6uPJpeBkqyEvdIlZD1X/fr3PHTPrdRt
      205V+WcYC+fy3DNPccr0ge6i2NVWiIGuRcDnoMsV4pTTFnLxuadz1oVXMGn8aJ546p/MHptL
      yOdAJBTy99uu5+yz5vPBh59StWYpo2acjFaWQBvDr391BSedfTH33HotQoRo7FF48pkHqF7y
      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
    </thumbnail>
  </thumbnails>
</workbook>
