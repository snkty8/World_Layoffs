<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='layoffs_cleaned' inline='true' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='layoffs_cleaned' name='textscan.11w2ba013d1lpj191fodd17iumfn'>
            <connection class='textscan' directory='C:/Users/snkty/OneDrive/Desktop/SQL_Project/World_Layoffs' filename='layoffs_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_laid_off</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>total_laid_off</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_laid_off</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>percentage_laid_off</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stage]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>stage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funds_raised_millions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[funds_raised_millions]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>funds_raised_millions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='layoffs_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]' role='measure' type='quantitative' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Funds Raised Millions' datatype='real' name='[funds_raised_millions]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentage Laid Off' datatype='real' name='[percentage_laid_off]' role='measure' type='quantitative' />
      <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal' />
      <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/snkty/AppData/Local/Temp/TableauTemp/#TableauTemp_0aa06rs1qdr8cm1ae16iu1gghnxf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 09:16:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company</remote-alias>
              <ordinal>0</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>industry</remote-alias>
              <ordinal>2</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_laid_off</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_laid_off</remote-alias>
              <ordinal>3</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage_laid_off</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage_laid_off</remote-alias>
              <ordinal>4</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>5</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stage</remote-alias>
              <ordinal>6</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>7</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>funds_raised_millions</remote-name>
              <remote-type>5</remote-type>
              <local-name>[funds_raised_millions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>funds_raised_millions</remote-alias>
              <ordinal>8</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>549</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='layoffs_cleaned.csv' id='layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA'>
            <properties context=''>
              <relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='company' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='string' name='industry' ordinal='2' />
                  <column datatype='integer' name='total_laid_off' ordinal='3' />
                  <column datatype='real' name='percentage_laid_off' ordinal='4' />
                  <column datatype='date' name='date' ordinal='5' />
                  <column datatype='string' name='stage' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='real' name='funds_raised_millions' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Total Laid Off by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Laid Off by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter from='2020' function='range' level='[yr:date:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' value='93' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DB76FBB1-E93B-4336-8D50-00A7299F81B5}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Laid Off By Country Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='member' level='[none:country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter from='2020' function='range' level='[yr:date:ok]' to='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]' field-type='quantitative' max='26446902.43306201' min='-24444785.542002521' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]' field-type='quantitative' max='18481857.085877486' min='-8271295.2377556842' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <geometry column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5942ADC3-89E9-4D89-B35C-079C5610BA0B}' />
    </worksheet>
    <worksheet name='Total Laid Off by Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Laid Off by Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' value='101' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</cols>
      </table>
      <simple-id uuid='{BA39FE86-57AA-4AA1-A2D1-13823F46B7DF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Visuals Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
      </datasources>
      <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='5' param='horz' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='97856' id='3' type-v2='layout-basic' w='89027' x='499' y='1072'>
              <zone h='97856' id='1' name='Total Laid Off by Country Map' w='44514' x='45012' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48928' id='8' name='Total Laid Off by Country' w='44513' x='499' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48928' id='10' name='Total Laid Off by Industry' w='44513' x='499' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97856' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='1072'>
              <zone h='17399' id='6' name='Total Laid Off by Country Map' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10858' id='7' name='Total Laid Off by Country Map' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' type-v2='color' w='9975' x='89526' y='18471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17399' id='9' name='Total Laid Off by Country' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='29329'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17399' id='11' name='Total Laid Off by Industry' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='filter' w='9975' x='89526' y='46728'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17399' id='12' name='Total Laid Off by Industry' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='64127'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17402' id='13' name='Total Laid Off by Industry' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9975' x='89526' y='81526'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{304E7520-F7CE-408F-B1E7-F0E2D9718135}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Visuals Dashboard'>
      <viewpoints>
        <viewpoint name='Total Laid Off by Country' />
        <viewpoint name='Total Laid Off by Country Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Laid Off by Industry'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{D5ECE1D7-EFA0-4178-B631-87AA03639601}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CEAD7C6-5D47-4E5E-B198-6E1A26E9D1A4}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='72'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='filter' />
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:location:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA226F26-38AA-4BD8-A531-CCCECAAB8169}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AA214B07-8281-4C3E-89FD-9D196EB399D3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Total Laid Off by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Industry' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Visuals Dashboard' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
