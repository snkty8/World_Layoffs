<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='layoffs_cleaned' inline='true' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='layoffs_cleaned' name='textscan.11w2ba013d1lpj191fodd17iumfn'>
            <connection class='textscan' directory='C:/Users/snkty/OneDrive/Desktop/SQL_Project/World_Layoffs' filename='layoffs_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_laid_off</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>total_laid_off</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_laid_off</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>percentage_laid_off</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stage]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>stage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funds_raised_millions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[funds_raised_millions]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>funds_raised_millions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='layoffs_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]' role='measure' type='quantitative' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Funds Raised Millions' datatype='real' name='[funds_raised_millions]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentage Laid Off' datatype='real' name='[percentage_laid_off]' role='measure' type='quantitative' />
      <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal' />
      <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/snkty/AppData/Local/Temp/TableauTemp/#TableauTemp_0aa06rs1qdr8cm1ae16iu1gghnxf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 09:16:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company</remote-alias>
              <ordinal>0</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>industry</remote-alias>
              <ordinal>2</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_laid_off</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_laid_off</remote-alias>
              <ordinal>3</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage_laid_off</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage_laid_off</remote-alias>
              <ordinal>4</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>5</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stage</remote-alias>
              <ordinal>6</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>7</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>funds_raised_millions</remote-name>
              <remote-type>5</remote-type>
              <local-name>[funds_raised_millions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>funds_raised_millions</remote-alias>
              <ordinal>8</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>549</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='layoffs_cleaned.csv' id='layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA'>
            <properties context=''>
              <relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='company' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='string' name='industry' ordinal='2' />
                  <column datatype='integer' name='total_laid_off' ordinal='3' />
                  <column datatype='real' name='percentage_laid_off' ordinal='4' />
                  <column datatype='date' name='date' ordinal='5' />
                  <column datatype='string' name='stage' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='real' name='funds_raised_millions' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Layoffs by Comany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Overall LayOffs by Company</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter from='2020' function='range' level='[yr:date:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</cols>
      </table>
      <simple-id uuid='{7C306AD6-270B-4BA3-86F9-D46DA023A010}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Laid Off by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' value='93' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DB76FBB1-E93B-4336-8D50-00A7299F81B5}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Laid Off By Country Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]' field-type='quantitative' max='24022051.618402451' min='-21150066.222939476' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]' field-type='quantitative' max='13744872.171771128' min='-7925182.1977989376' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <geometry column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5942ADC3-89E9-4D89-B35C-079C5610BA0B}' />
    </worksheet>
    <worksheet name='Total Laid Off by Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Laid Off by Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' value='101' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</cols>
      </table>
      <simple-id uuid='{BA39FE86-57AA-4AA1-A2D1-13823F46B7DF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Visuals Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
      </datasources>
      <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='5' param='horz' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='97856' id='3' type-v2='layout-basic' w='89027' x='499' y='1072'>
              <zone h='48913' id='1' name='Total Laid Off by Country Map' w='44523' x='45003' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48943' id='8' name='Total Laid Off by Country' w='44504' x='499' y='49985'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48913' id='10' name='Total Laid Off by Industry' w='44504' x='499' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48943' id='14' name='Layoffs by Comany' w='44523' x='45003' y='49985'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97856' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='1072'>
              <zone h='13979' id='6' name='Total Laid Off by Country Map' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13979' id='7' name='Total Laid Off by Country Map' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9975' x='89526' y='15051'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13979' id='9' name='Total Laid Off by Country' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='29030'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13979' id='11' name='Total Laid Off by Industry' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='filter' w='9975' x='89526' y='43009'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13979' id='12' name='Total Laid Off by Industry' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='56988'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13979' id='13' name='Total Laid Off by Industry' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9975' x='89526' y='70967'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13982' id='15' name='Layoffs by Comany' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='84946'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{304E7520-F7CE-408F-B1E7-F0E2D9718135}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' name='Visuals Dashboard'>
      <viewpoints>
        <viewpoint name='Layoffs by Comany'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Laid Off by Country' />
        <viewpoint name='Total Laid Off by Country Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Laid Off by Industry'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
      <simple-id uuid='{D5ECE1D7-EFA0-4178-B631-87AA03639601}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CEAD7C6-5D47-4E5E-B198-6E1A26E9D1A4}' />
    </window>
    <window class='worksheet' maximized='true' name='Total Laid Off by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='72'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='filter' />
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:location:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA226F26-38AA-4BD8-A531-CCCECAAB8169}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AA214B07-8281-4C3E-89FD-9D196EB399D3}' />
    </window>
    <window class='worksheet' name='Layoffs by Comany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69D81691-3B38-4735-9721-E583D2AA3430}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Layoffs by Comany' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country' width='192'>
      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
      +8lOGN/h2f8BEm/+lD4v5rYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Industry' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO3deXAe933f8ffuPvcJPLhvgABIEAcBEiR4iKJO25Llxk4TNUfTaWzHkzjp
      YU+cidtOG7dOk7RNMk497rhx00wSx46TOHXiSLJoURLvCzxBghcI4r6BB8997e6vf4AiRYoC
      IRF4AOL5vWYk4tnn+H0X2M+zu7/d/a0ihBBIUo5SV7sASVpNMgBSTpMBkHKaDMB6IAwOHzpM
      Wjff9yVv/u3/4VR/cNGPuX7+OEOzieWubk2zrHYB0jIQOm++9RYdXTu5eeUGNmua8bDGrh1b
      MBNBjh8/Q8+1m3S0mlzvvURNUyvj1y7ir9nEaG83kzGFzo7NvPL9v0SpG+HF5/ZhRmYJ5FkZ
      n0tideTRsrGKG1d6KK3bjNexfhYbuQZYV3T+359+nR8du8wr3/kTLg5M8I3/9lWujU4zMxcC
      4Mc//AExHY6/9rccOfQq//fvDjEzeoOBiTAZXSeVSpLRU/zg29/iT77z9xh6mm//5V+R1mP8
      3fdfRbVoqzyPy0sGYJ2xBzbw6c/8AntbaglFwiTtpXz6F36WnS1173ltoGoTRVqQkxdu4vTl
      s7mxnt3PfpzW+hI0i4fP/qt/S+e2rWwtTvPmgTfxbtyN26KswlytHBmAdUyz2MgEh/jBD/+R
      YxeuA5CMTrH/H3/AsfP9hGenqW5/gpZiOH99HL/bwZE3XuPa4DSaw4vXZQVUnv7IPr71v77L
      U/s6V3eGVoD2la985SurXYT0qBQ8bi8VFRX4vB7KystwOl0Ul1ezt2sLoxNBdu7ZQ011NW0b
      a5iNmOzbt5uNm1tIzYziKGvlxX3tVDduJj07hqeoiprKEsrKy1ABq9XB1eFJfvKFp9HU9bUG
      UFb7SLBpmqiqXBGtWZk4B97Yj72sjSc66llfi/8aCICu61gs66dXQXq8yK9eKafJAEg5TQZA
      ymkyAFJOkwGQcpoMgJTT1mT/40wsipnF3lmn1YrX7shae9LasSYD8N2zp4imU1lrb2tFNS80
      tWStPWntkJtAUk6TAZBy2prcBHoQIxXj+tHDGIF6Wjsa70yPTw7Qe/Y6ejpN0zMfxaOEOLn/
      IA6Pn4INzdRsKODi/gOkDYWKrbspr8hfxbmQ1prHJgDpeJKqti0MDM+/a6pgoPcGLc8+j80M
      cvrgSVqaiyhp2kVDSyUAcxffxrl5H1sqVU7vP015xdOrUr+0Nj02AXDmF2BEpt473aEycv0m
      eT4riXgU1VHDXM9lugd78Nc1Yx1PkN/gRbEIFMKrULm0lj02AXgwhdqdTzEzMEhGN/D43LiK
      qtjxUjWKMDnx6uvUBjTSSR3hFCjCvtoFS2vMYxOA6OQIozduMDESwuf1ku9OMh31UJJvMD8b
      IhmcoqJ9L3P9vUxOx1HNBK7Caopaijh54MeE8+y4qzet9mxIa8yyBEAYcU6fOEsGSBg2nt23
      gyNvvILFFcDq8tPR1kjPuets295C38XT2MpbqC50f6A27L58SpvaKG0Czepg+sZlilvqcNmg
      THOh2ptxuR2I4s24CsPoQsXt96IC2z/yJKm0idvvXY7ZldaRZVoDWNjStQe7ReHYgQMkRBLF
      VsyuXdtRFAVFSZNOZ4hODTKR8fLEB1z4AaxON37n3fd5tu+8+3MgcOdnRVFx+vPuea/N5cHm
      +hCzJa17yxIARbNhM5OcO3EKe9kG3KaK361w8sRx4hmVvU9sJTQ1xP7JET720ksogGEYCCHu
      /LuaTNMkk8msag3S6lieTSBhcPzQ21S17aKqKA9TmLRu246qwMVTxwgl0viLq9le5eRi7012
      tTeiaXfHl7n/ksjxoRTz8eRylLYkdXYDq9WatfaktWN5AhAa5MpYDMXZy8hNB21tdVy6cAmB
      StLQaHLZACio2kT+9FGujwTYVFXwvp83PpRmLpK9c4GCxXrW2pLWljV5Ufynf/fvmYtkb4zK
      F3Y28PlPbs9ae9La8ficC6QolJUGaCrz3DNZs1jobK7iqS2V5NlVFEWlubGCp9sq8FgVQGFT
      fTlP335ekt7tsVki/HleKvJdVATu7c7Z0lxNeHKaE31zPN1RTVlVKYUizumhOM+0lZJXWkKd
      I8WpW2GeaitfpeqlteqxCUAoGOb8YJD7RwCfmItRW1lIa20BU7NhygJubo4HiYWCKE4v1WU+
      rvXPEo+Ewe5cneKlNeuxCcD78TutBCNx5sJJHE4bCIFyZ/wygWkKFkbzW29jmknL4bENgM3h
      pKrAQWGem1AoxvhcnMI8D2MzEZqqCvAXFJKJhBgYCdLcWIw3z48Rj6122dIa89icC1RcUkBr
      hQ9Vga6GAnSXn9DQMEfP9LFlYxldVsErx28S0wX26hLaiuHApUnSJpx3FtNe7uTAxbHVng1p
      jXlsAjA1Ocubk7N3HjvtIRKphf77C1dH7nntwNAkA+96PDwyxXAWapQeP4/tJtA7C78kPYo1
      uQaoTIfwJrO3vV6QiWetLWltWZMB+JWJkxjBxe9ouJw8ITuwL2vtSWvHY7sJJEnLQQZAymky
      AFJOkwGQcpoMgJTTZACknCYDIOU0GQApp8kASDlNBkDKaTIAUk6TAZBymgyAlNNkAKSctkwB
      EAjTRNd1THNhnC0hbj8WgoWL080707N5C1RJWszyDI2YiXLixAUUq4VgJMNHnt9N98G3Me1O
      0sLFk7ubOX2il117Orh06gh5DZ1UFXzwEaIlabktzxpAc7FjzxPs7NqOW6SIBUfQ8+rYs2sP
      fi1KOLFw+eLs0DVSnmoq5cIvrRHLMzy6qqKkYhw5epyixlbU5Dx2pw8UBYdmIaHrhKaGeHtS
      4WMvfeKhw6Nne7hSOTx67lqm4dF13j5wiK1PPU/AbUMPmyTGoiAEsUyGCpsVf3E1ezcGOH32
      Evt2bll0eHRFye4gVqqqyuHRc9SybAKJ8BgTMZOrF7o5dvwshreMfDHNoSOHMV2leO0WHA4b
      7sJq6vJ0+kZmH/6hkpQFa3J49NHP/1p2L4r/yPMEPvuZrLUnrR3yOICU02QApJwmAyDlNBkA
      Kac9NADBLO6MSlK2PTQAX/7yl7NRhyStiiVtAg0MDHD48OGVrkWSsm5JAZienubq1av86Ec/
      Wul6JCmrHhqA7du3EwgE2LBhA8PD8jYT0vry0HOBPve5zwFQX1/Pc889t+IFSVI2LRoAQ0+T
      zAgwMzicbjRV3mlRWl8WDcBU71t841AUbfw4v/Ibv01ZniNbdUlSViwagIL6Tor+4Q95/exF
      Jv/Db+CwauAt47e+/EXy3bZs1ShJK2bRAKTjUXZ+8pdQ3D5+7rNfpMhnz1ZdkpQViwYgERzh
      z//sLYz5Pg4fOki+2wo2N7u7OhfWBpL0mFu0G7SwYSef+6m9WKw2YtEwoVCIUCSGKQd1kNaJ
      RdcAimqlo+tJPmPoDE3HKalppLOtCZtFnkMnrQ+LL8nC4LU/+0P+4eQAPr+X/tOv8l++9uek
      5SpAWicWD0A6wqsXZvnyF3+J5559lp//3Bcxp84RjKazVJ4krazFA2B10ZSn89qRHqKxGDcv
      HCZsBvA45AgK0vqw+KkQqo1f/o1/z/f/+nv87o/+iqKqjXz5330Jt03uA0jrw0PPBbJ6CvjZ
      z/wqP5uNaiQpyxYNgKmnicQS905UVLweD6o8L0haBxYNQGT8Bt/63qtc7D5FTcs2fA44d3WC
      b3z998l3yf0A6fG36Ma8v6qFL/36l9hcX8Uv/NKv8aVf/xJ1hRZ0497XCSGIhWY5f/4y+u1p
      Vy+e4tixY5w+f5mMoTM0OAZAaGqYiWBsJeZFkj6wJY0N+hMvPs03fuc/YrOCv3YHPtf9bzMY
      HZ1iPjiHCSB0ZsI6e/fuuf18irHRSSrLfJy9PMCefZXLOQ+S9KEtGoBMIsJ8Eorrt/KFL7Yu
      TNRsaAjg7j6AoljY2LyZSOjkwgQzSTIc4djRo/iKq2huKCE2P8WhQzO07NyHXVMwTRMhFm6c
      oev6Pe0Ksj869P01SLlh0QDEZ4Y4MwKu+V76xiMLE50B/tlPfgKPtsjWk+bh+Y9/DGGadB87
      xFx5PnaXF5/LIBJNUOy13xkBWlEUVPX+z8ruDvaDa5BywaIB8Fe18EIVCNHMXmEiBKAoqPcN
      Xy6EuPOfaZokY/MMzsSorywmmkhht2hYbE7aOps5cvAwAf9T5LusKMrCmuD+hS/b/UsyALnr
      4fsAQvDm33yTv3njDBani6m4gz/+o/9K3rt7gYw4Z7p7MFQ4f+oUzVt3ErCFOHPuIlt2PY3X
      bqG+sQZFs7NzdxfBeAJkL5K0BixpJ/jYhT5+8Rf/OVpRM6/9xR8h7vuOVixuduzade+bKuoo
      qqi787CoKACAzemjxPmIVUvSMlnSen93xxZsecUc+quvM55wYNHkQTBpfXj4GkBReP7lfwnA
      ts1f5dy5bixy+ZfWiYdcD2ASi9y+EiwUIhQO8dff+y6huLyhnLQ+LL4G0JP88G+/zchs/PYE
      gTVQi11eDyytE4sHwOLkZ37x81kqRZKyb/EAKErW++QlKZsWDcD80CX+93dfuXeiu4jPf/Zf
      4HPKfnzp8bdoAHwVm/jVX625d6Ki4nYsy/21JWnVLbokq5oVr8fC+YM/4C9+8BZCsxLX8vm9
      3/pN8txyDSA9/pb0Vf7D/Yf5pz/9SexlLbz+7T9GleMCSevEkpbkzbU1WLz5nHrlewwHYxiG
      HBdIWh+WtAZ45id/Bre/kPqSEj4SN/A55HEAaX1Y0hrgf37t9wnGdQpKyvjTb/4+M1F5JFha
      HxZfA6SjfP0Pf4/T79wfQFMobd4jd4CldWPxANg8/Ovf/Co79x3C6fIS0zVaW5uxZ/FsUCVQ
      jmvbZkDDnOwjOZ7G3bERgQVz6iaJizcXXqjacD3/HKoiyNw4R+rWHK5nn0FRVYyhHpJ9M7j2
      7UO1qugDl0heH83aPEhr19Juk3rtND88fJ7Jm+f4T7/9NeIZc6XruisxT+zAAWJvHMBSuxEx
      M0L0jTeJvXUYS1XtnZdpGzpgqJvo/jexNbWh1jTDZC+xH+9Hq2vDUt0As31E9+/H0tguj3BL
      wBID0HNzjJ9++WV+4uWfx5YcIZrM3gXkIhFHcfpwv/gS6YvdANjaduB7+VNkrly+8zotUIA+
      Mw0iDaoNzefDCIYAE6GbqAV+zPkQIDBSoMo7PEkssRfoUy89zzf/+3/GZhFUd75IIJv7AK4A
      no/uIf7WGxihhbNS0z2nyfTfwPPMDpL9EwCYsSgWlwtIIkwdM5lEc9gABUVREJE4imPhFk+q
      BUy5Hy/xsAAYGa7cHGTz7o/zB7tewDRBW2w0iBVg27IdJRHC1tCEGZ7B0D3YyjwIXUXEIiiB
      KpxVNuJXL+B84TnU2hjmWD/GrUlcL+xDKY1CeITMwDD255/EVRyBucGFC/ylnLd4ADJR/uhb
      f8Y3/8dXURQVbRW6/9Pdb6PbF9Y4wtARqRGMSQcKYCYT2Jq3krp5CVJpIq++jmLVEPGF8Uwj
      r/0YxWZBJOIgIPr6j1FtGmYisUiLUi5ZPAACzKlrfOELX7g7Ldu3SdXTmPq9N+QQ8fidobPS
      l87efSKTRrx700ZPI979Xj2NKce/kt7lofsASuFGvvYHv52NWiQp6xbfoLe5+fynfz5LpUhS
      9i0eAM1GR2vzQz9ECIGRSdLXd4t3Bo6Ozo1z8sRJZiJJBAaTEzMAxEMzTM/L0aGltWGZunQM
      ei9eor9/EAMQ6TDHztygo7OdCyeOkNIz3OofRugJTp3pwe12LU+zkvSIluXSLkWx0Na5nfTx
      hdGh43MT+Cs3YLfaKcl3EU6kSSeinDt9mvotO3BZlfeMJ/pu2e6hfFANUm5YoWsbxd3Rn1EQ
      gKGniSVMSm4PQvvuAIj3dMpnOQKCB9Qg5YIVCYArUEqot5dMQyEz4ST1ThtOb4CuHZs4eOgE
      /r1P4bEvHFQQQqDdd4Ah22NRKKrynhqk3LAs+wBCj3Hq2DGiqQTdx44TEX62t5TTffocG9t3
      YLdYqKouQ7W66OpsJRSKLEezkvTIlmcfwOKma8+eeyeW1LC75O6IEhWVpQC484pxL0ejkrQM
      5NXtUk6TAZBymgyAlNNkAKScJgMg5TQZACmnyQBIOU0GQMppMgBSTpMBkHKaDICU0+StXpYo
      nTH4nW8fzmqbH+tqYHdLZVbbzDUyAEtkCsG5GxNZbXNrY1lW28tFchNIymlyDbBEKiZdtitZ
      bbNUq3n4i6RHIgOwRFbF4N/4v5/VNu32emB3VtvMNTIASyRMhdDFxqy2mdeSjxzEemXJACyV
      UDATzqw2aWbkdcorTe4ESzlNBkDKaTIAUk6TAZBymgyAlNNkAKSctmLdoFcvnGIupmN1+elo
      28T48CTVtRXMTw6TtAYoDcjhsaTVtzJrAKEzE9HZs2cPOzpasGoGY2NTGKkI53oHyffL4dGl
      tWFl1gBmkmQkyrGjR/EWVdLSWEosOMmhQzO07NqHXVMwTfPOsOS6fu+Nu0SWR4d+UA33E0b2
      by62lLqkR7MyAdA8PP/iRxHC5MyxQ8xVBLB7/PhdOuFInGKvHUVZuH+vaZqo6v0roiyPDq0o
      D6jhXuIhz68EVX14XdKjWZEApCJzDExHqasoIhJPY7doWKwOWrc1c+TgEQJ5+wi4Fm59+qCF
      L7uL/9ICYCqrsSAuIZhCkO1bXypaFm+UvsJWJAB2bz4FkTAXenpp3/0UXruFhsYaFM3Ort07
      CMYT4Fo/v8TVZE5fI/6XP5219hRHHp7PH8laeytthXqBFArLayksr70zpbAoAIDV6aM4u+eU
      SdL7khuYUk6TAZBymgyAlNPkBTGPyuHHva8L9BTJ7m6McBxQsW3ZhjXfheLwIOYHiF+ewv3E
      NhQFYgffQODDta8LRVVIHH4TI5pZ7TnJSTIAj8i5ZxeJg/sxU+8+eGeSvthNGrDvfAYxMISj
      6wkSh9/E1Apxd7WTyQRIdx8iE/PheaKD6IHTqzULOU1uAj0SDWtpMY5dT+L9xCewVeTf+7TF
      izVfkJ6MoVrATGcQiTlwBNCcdoxIEpJTKM6C1SlfkgF4NCZmeIb4wUNE3jqJvfHei+ZtHVvJ
      9JwDBMI0QVFAsYKZRug6ikUBHAgzuSrVS3IT6BEJkjem8OztxMBLZqwPy8Z2lLkbZIIm9hIH
      kTMhAFIDU7h37cC0BMhcOY6ulOLctQfDcKP3nlnl+Vh+4ddeIzM0nLX2LCUl+D/1yQ/+vhWo
      Jafo184QnypAIYMxH8W5p4bkzQSYKtE3D/LOeX1G3wXiswUo4grGfAQIEQ9PoagGRjC8IrWZ
      piCYMAm4NJTb55ekMybBhIHVquKzKsxEDUwAVaHIo5FKGYRTAkVVKPZZ+LDjUiQv9JA8f36Z
      5uThbI2NMgCrxQzO3vk5cfTo7Z8MRMJ439cBmKHgitbVeyvCX1xO818+UYj9dgAuD8eZy8DM
      bIrKWg9mJEMGOHQ9yi9/pJi3u+cpKHLgsKgUPEIAHhcyAOtUPJbmakKhI3DvItxR50YIQXdG
      J23ReHKTnVQsxXDcQ6kVpjKwwalRX2zPiUG55E7weiQEh2/E2Vv/3qvuUkmd73fPc2LOZKNP
      BSF482qcZ5tcoCr8VIeXPLvCK2eCTKWze13GapBrgPUoY9A7k2E6HeLkYJyyahdPV9sBgd1h
      4eWuAJlIgleuJXlxk5VJQ+NjDhWBSZHPRqVFIToTZyIJxetsNTD7zT/GCM7deSwDsB7ZLHzx
      +SJAUGy38ESVje8dnmHPjgC9V8PMpsEwBU+1+bk1GmPnZg+qAroueP1CiKgBqt3Gy95sX5mx
      8lJXr6BPTN55LAOwril8tN2LMAyaN/qocqhUdeTd+5J6750fLRaNn+i872DeclZTWIV7ayNC
      WDCn+klc7LvdsAPXM8+gqoJM33kyYSvO5jpAxVYVIPidvwNTwbHvn2BJXSV68vqy1SQDkAMU
      TaOtZPX7c8TMMNEfD4Nqx/vxfXA7AFpNC2L0PNHeabwvPUvqlf3EDg6j5FeimMVgglreiKKH
      URz2Za1J7gRLWaRga9uO72d+ikzvxTtT1TwvZjAI6JhY71wS69jaRvLsBbA4cDaXkbzYv+wV
      yQBIWSRI93QT+YdXsDZ33J0aS6A4nICCgoEAFF8ZmjmDHjOwbu7EGvDj2t2JrakFzedYtork
      JpCUNZa6zdjK8xCGgojNg6sE95YCYuev4fjoXlzVCczRhc0ie3srqYsL1x5neo4y3wO4qlHT
      fozw8p07tTIBEAZnjh0iZmqojgB7tjdy9vQ1tne1ce3scZzV7VQXypHhco0+cBVj3A4KiGQS
      a9NWUlcuQzJN9NXXUSwqIpkCIHn8Lbh/TKT4MJEjI8ta04psAmVCo8Sclezb+yROY45wUkfX
      DULj/cyphVTJhT83CYFIJhGJJAjIXDmHHkovPKdn7iz8C48fNNSLAMNc1pJWJADJeAyn2wWK
      gstiJZ7RCU0N8caJXrY0N2R93B9Jej8rEgCHy0MyngAhSOg6LqsFf3E1z+3czLme65jr/wi7
      9JhYkQBY/eW44sMcOnKYhCWAz2FB01TyyuspsczTNzL78A+RpCxYmZ1gRaPziWfumbRjZzsA
      je27VqTJXCUMlUzQ+/AXLhPFnb22skF2gz7mzJSN6PW6rLWner2s3MkS2acIIVZli9wwDIQQ
      GIaBpt17mD49MIDQjfd55/LT/D4sRUX3TLt/1GphmqT7b2WtJgBLYQFa3t1zd4QQCCHurSuV
      Ij28vF2Di1E0FVvdvYF70AjfmbFxzHg8a3WpDgfWyoqH1pUeHEJk7g5Bs2oBeIeu61gsa29F
      tBbreucLY63VtRZ/V7C0ulY9AEIIFGXtdYyuxbre+VOtxbrWWk2wtLpWPQDSWiUwTYGiquv6
      uM3aWm8JwfjgdfrHZrG6A3S1N61iMSY3ey8yOjFF3LRRWFrB9tbGh7/tEYUmhohY8qks/HC9
      Laahc+ncKaZmQ6gOL+U19TTVln2ITzI4c+I82/ZsX9qF8UIwfLOXoakQDn8xnS0NH6itK5dv
      sKm5CfUDpO365V7qWpqxAiPDw5RXVb2nXz80Oci5K4PYrCoFlY1srCm5J9BrKgBGYobLg2Ge
      fnIXpq4jTJ2bVy8zE9HZ3NaGlpxleDLEfHCexrYOfFqC8xevYnUX0NrcwMT4GFWVlQz291O+
      oZpbvVeJxePYvAGMWBDFU0zbxmrGB28wMD5PY3MbTjNKOKEzNjlL+5ZWLHd+gyr1zR0UeXu4
      niphe0MxE+OjqEJnMiKoKbDR2zeIK6+U1qY6BvqukYrHiAkXHW0bmRi4xvBEiOqNzfjMIAPT
      MWKxBJtb2/Da4drlHsJpjda2VtLhSZIZwVQwTmyohzHdS2trK0115R/4d6hqFrZs38O1C8dx
      V3ZQWeBkdGgIU4+RsRfj1GcZGJuluKoem1AoqSjEkp5nOKhQ6Exx6Uo/hVUNbKj8YH09ifkx
      +qcN9u7ajaFnEEaGa709hJIKzW2t6OFJJmfDzAXDbO7oxGGE6Ll0A3teMbVFVk6cOMFsJEpb
      SxPR8Dwzk1NUN2wgmTAoKymgv/8mG+rqGLzRy1gwQU1lCSdPnGA8EqW9bSsmDz6olYzEqdnc
      Tm2Rm+MHD5OsLGJ+pI+B8RCNza1r63To+dGbFG5oxqKq2Gw2pm5dIWYvpnNLA+fOnCMSnCSC
      m67OBq73DjDYc4nSlm00bSgDYTI6Pg7AyMAgOgYjI9M0t29l+lYfNc3tzE+PYESnuDKaYMe2
      VnrPnycyP8Gx7l421NejPeTbZ3r4OpduTbOhpgKry8e27Tuwh4eYisPQ8BDl9c34jQizkSDX
      hyN0dXXid1qJzY4gfFV0NFXQ03OdoasX0Qo3sGVjOWfOXyI4dpOz18aor6+jvqGRze3bPtTC
      /376Lp1hIm6hqjQfX0EZO3ZsZ3LwGrHZQSaDCUb6+sCuceZsL1u27yA03Mt84oP1ws2ND1Ja
      14imKthsNkavXcDMr6V9UyXnzl8iODNOxh6ga1stVy8NcutSL1VbOmmsKsFTUMaGunp279yO
      SzM4ceQw/vJaHEqayamFoWMGBgcIj11lQvezY1s7BUXl1NfWsXNXF3luKyOjo+9bmxAmmVSM
      pGnBiM9yfSTKjm3NXLpwYW0FwOZwkkok7jwORlOUlwSwOrw4RBpd0SgIBNDsNlTDZEN7O6Pn
      T3Lq3CVS+ntPknJ7/ditGl5fAJfDhqZpxEOzzM1Ocqr7PMlMBgMrW7Z2ku918tD9OJuXHdva
      cds1+q/00H36NINjoyTSYHN68bsd2C1WDM1NU5WXw0ePcmt0GhQFr9eLwxvAYqYIJjJUFPhw
      ePJR0gmEzcW2bVvxOFbmtlGu/DI6WhuxagY93ac4ffoMozMhKqrKGB8dYSJqUuERzM7Oc+70
      KWYjaVLpDzZatc1uJ5W6ezLbdESnusSPw5uHmk4iVCuF+XlYHHYU3aBhSyu3zp6g+2Ivaf3e
      3dCapjZqSwOo9/1B5ibCVNaWYbHasNuWuvGS4cq5U/z5d/6ezr17EPEgUxMTnOq+QDyZWVsB
      8JQ3ERs8y8j4JP2DI1SU5HPtyg1Gh/oxXPlY71tA54Nhqhs3kWcziCQNMokYE2MjjEy+/6kW
      nsJyCvN81Dc0UF9XjUXh4Qv+O5R3/ieIJjLU1tXidjzgD6GnSOCgeVMjobkZEILZ6UluXbuC
      o6CYygIfl671Mdx/A3te4T3b2Ha3i9D0JPORGLPD/UyE4swMX2fynbMmPwTlzlZvhpRhp66m
      EpuqYPOVkJ69herMQ7O6qSwrpKqunvqGDfg+YBjzKzcyfeMMYxNT3Boapa7cz4VLfQz192H1
      F7xn235+PkrtxiacSnrhC0TTmZyaIWOYd/4eimohGpljdKif6VCS8oZqbpzvYWJ8jFAsicMO
      E+NTpDK311amTu+Vq5jC4PLlq7dbstK8bRc/96nnOH3sOKazkNLifBoa6mmorydoeucAAAGQ
      SURBVF57vUB6Ks7Q8Cg2b4DKkgLmp8eZjerU1FRipuIYmgOnTRAOpfC4NAaHhrH7CikryiMy
      O8VMJI3P4ya/MI9YOIbP5yESiuD2+4iEw/h9PuKhWUan5igsrcRtFRiKDaf9wd8oejJGQljx
      Om1EoxEcTg8WTSEZm2d0IkhhgR+bJ0A6vvDZyWgUxekkOT/NVDBOZXUNoZsnuJkpparAQ2V5
      MaoCMxMjRNIaNVXlpOMRFLsbu0VFCIOJkWFw5uO3mZg2D2o6jGnPw2Nf+nW98WgYze7GbtWI
      hMO4fT5UIDw7wUxUJ5Dnw+fzEpufAUceXqcVI51gcGgEh6+AsqJ8IuEoXr93yb1AmWSUoZFx
      XP5CyorymZscYT6pUFNdTjoRQ7W5sFsMwqEMLgcMDY/izi+huMBHJh5maHyWysoKMpkMXo8b
      hGB6fISEsOF22SjIzycyN8XUfILK6iqUTIzhsWnKq2pIJ2P4vR6mZ+coLAgwMzNHUVEh6UQM
      Q7PjtFmIheYwbV60TJjRySCFpRX8fwLyGd5AD6zLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Visuals Dashboard' width='192'>
      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
      akwBmMxq/j8UspxA5jItyQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
