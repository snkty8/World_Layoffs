<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='layoffs_cleaned' inline='true' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='layoffs_cleaned' name='textscan.11w2ba013d1lpj191fodd17iumfn'>
            <connection class='textscan' directory='C:/Users/snkty/OneDrive/Desktop/SQL_Project/World_Layoffs' filename='layoffs_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='company' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='industry' ordinal='2' />
            <column datatype='integer' name='total_laid_off' ordinal='3' />
            <column datatype='real' name='percentage_laid_off' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='string' name='stage' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='real' name='funds_raised_millions' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_laid_off</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>total_laid_off</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_laid_off</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_laid_off]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>percentage_laid_off</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stage]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>stage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>funds_raised_millions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[funds_raised_millions]</local-name>
            <parent-name>[layoffs_cleaned.csv]</parent-name>
            <remote-alias>funds_raised_millions</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='layoffs_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]' role='measure' type='quantitative' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Funds Raised Millions' datatype='real' name='[funds_raised_millions]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentage Laid Off' datatype='real' name='[percentage_laid_off]' role='measure' type='quantitative' />
      <column caption='Stage' datatype='string' name='[stage]' role='dimension' type='nominal' />
      <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/snkty/AppData/Local/Temp/TableauTemp/#TableauTemp_0aa06rs1qdr8cm1ae16iu1gghnxf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/18/2024 09:16:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>company</remote-name>
              <remote-type>129</remote-type>
              <local-name>[company]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>company</remote-alias>
              <ordinal>0</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1254</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>industry</remote-alias>
              <ordinal>2</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_laid_off</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_laid_off</remote-alias>
              <ordinal>3</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>263</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>percentage_laid_off</remote-name>
              <remote-type>5</remote-type>
              <local-name>[percentage_laid_off]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>percentage_laid_off</remote-alias>
              <ordinal>4</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>5</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stage</remote-alias>
              <ordinal>6</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>7</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>funds_raised_millions</remote-name>
              <remote-type>5</remote-type>
              <local-name>[funds_raised_millions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>funds_raised_millions</remote-alias>
              <ordinal>8</ordinal>
              <family>layoffs_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>549</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='layoffs_cleaned.csv' id='layoffs_cleaned.csv_3BEA169B78F64017988C81DEA27F41FA'>
            <properties context=''>
              <relation connection='textscan.11w2ba013d1lpj191fodd17iumfn' name='layoffs_cleaned.csv' table='[layoffs_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='company' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='string' name='industry' ordinal='2' />
                  <column datatype='integer' name='total_laid_off' ordinal='3' />
                  <column datatype='real' name='percentage_laid_off' ordinal='4' />
                  <column datatype='date' name='date' ordinal='5' />
                  <column datatype='string' name='stage' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='real' name='funds_raised_millions' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Layoffs by Comany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Company from 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</cols>
      </table>
      <simple-id uuid='{7C306AD6-270B-4BA3-86F9-D46DA023A010}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Country from 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' value='153' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{DB76FBB1-E93B-4336-8D50-00A7299F81B5}' />
    </worksheet>
    <worksheet name='Total Laid Off by Country Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Top Country from 2020 -2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]' field-type='quantitative' max='24022051.618402451' min='-21150066.222939476' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]' field-type='quantitative' max='13744872.171771128' min='-7925182.1977989376' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <geometry column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Latitude (generated)]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5942ADC3-89E9-4D89-B35C-079C5610BA0B}' />
    </worksheet>
    <worksheet name='Total Laid Off by Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Layoffs by Industry from 2020 - 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_laid_off]' derivation='Sum' name='[sum:total_laid_off:qk]' pivot='key' type='quantitative' />
            <column caption='Total Laid Off' datatype='integer' name='[total_laid_off]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Amazon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Booking.com&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Bytedance&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Cisco&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Google&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Groupon&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Katerra&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Meta&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Uber&quot;' />
              <groupfilter function='member' level='[none:company:nk]' member='&quot;Zillow&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Consumer&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Healthcare&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Real Estate&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Transportation&quot;' />
              <groupfilter function='member' level='[none:industry:nk]' member='&quot;Travel&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]'>
            <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</column>
            <column>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]' value='141' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' />
              <text column='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</rows>
        <cols>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</cols>
      </table>
      <simple-id uuid='{BA39FE86-57AA-4AA1-A2D1-13823F46B7DF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Visuals Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='layoffs_cleaned' name='federated.0cyrdqv10n9gpu1cnlb4a1t6njed' />
      </datasources>
      <datasource-dependencies datasource='federated.0cyrdqv10n9gpu1cnlb4a1t6njed'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='5' param='horz' type-v2='layout-flow' w='89031' x='10470' y='1072'>
            <zone h='97856' id='3' type-v2='layout-basic' w='79056' x='10470' y='1072'>
              <zone h='48903' id='1' name='Total Laid Off by Country Map' w='39542' x='49984' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48953' id='8' name='Total Laid Off by Country' w='39514' x='10470' y='49975'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48903' id='10' name='Total Laid Off by Industry' w='39514' x='10470' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48953' id='14' name='Layoffs by Comany' w='39542' x='49984' y='49975'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97856' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='1072'>
              <zone fixed-size='214' h='29758' id='6' is-fixed='true' name='Total Laid Off by Country Map' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='295' h='34049' id='13' is-fixed='true' name='Total Laid Off by Industry' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9975' x='89526' y='30830'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='266' h='34049' id='15' is-fixed='true' name='Layoffs by Comany' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9975' x='89526' y='64879'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='41823' id='7' name='Total Laid Off by Country Map' pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type-v2='color' w='9971' x='499' y='33238'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='23867' id='9' name='Total Laid Off by Country' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9971' x='499' y='75061'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='32166' id='12' name='Total Laid Off by Industry' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]' type-v2='filter' w='9971' x='499' y='1072'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{304E7520-F7CE-408F-B1E7-F0E2D9718135}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Visuals Dashboard'>
      <viewpoints>
        <viewpoint name='Layoffs by Comany'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Laid Off by Country' />
        <viewpoint name='Total Laid Off by Country Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total Laid Off by Industry'>
          <zoom type='entire-view' />
          <highlight field='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{D5ECE1D7-EFA0-4178-B631-87AA03639601}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[sum:total_laid_off:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CEAD7C6-5D47-4E5E-B198-6E1A26E9D1A4}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='72'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:location:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA226F26-38AA-4BD8-A531-CCCECAAB8169}' />
    </window>
    <window class='worksheet' name='Total Laid Off by Country Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{AA214B07-8281-4C3E-89FD-9D196EB399D3}' />
    </window>
    <window class='worksheet' name='Layoffs by Comany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:company:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:country:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[none:industry:nk]</field>
            <field>[federated.0cyrdqv10n9gpu1cnlb4a1t6njed].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69D81691-3B38-4735-9721-E583D2AA3430}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Layoffs by Comany' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country' width='192'>
      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
      bZr/DzWrpTWrI0KMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Country Map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Laid Off by Industry' width='192'>
      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
      d/MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Visuals Dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
